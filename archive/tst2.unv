//тест на рекурсию
//расчет факториала

defun factorial(integer f):integer;
integer r;
begin 
  if f == 1 | f == 0 then return 1; end;
  r = 1;
  while f > 0 do 
    r = r*f; dec(f);
  end;
  return r;
end; 

defun razm(integer m, n): integer;
integer r;
begin
  if n == 0 | n == 1 | m == 0 then return 1; 
  elsif m == 1 then return n;  end;
  r = 1;
  while m > 0 do 
    r= r * n; dec(n); dec(m);
  end;
  return r;
end;

defun comb(integer m, n):integer;
begin
  if m == n then return 1; end;
  return razm(m, n) / factorial(m);
end;

defun PrintFactorials(integer count);
integer i;
begin
  i=1;  
  while i < count do  write(factorial(i)); inc(i); end;
  writeln(count);
end;

defun PrintRazm(integer n);
integer i, j;
begin
  i=0;  
  while i <= n do 
    j=0;    
    while  j <= i do 
      write(razm(j, i)); 
      inc(j);
    end;
    writeln(i);
    inc(i);
  end;  
end;

defun PrintComb(integer n);
integer i, j;
begin
  i=0;  
  while i <= n do 
    j=0;    
    while  j <= i do 
      write(comb(j, i)); 
      inc(j);
    end;
    writeln(i);
    inc(i);
  end;  
end;

array 10 integer m;
integer i;
begin 
  i=0; 
  while i<10 do    m[i]=i;  inc(i); end;
  i=0; while i<10 do writeln(m[i]); inc(i); end;
  PrintFactorials(7);
  PrintRazm(5);
  PrintComb(5);
  ShowConsole;
end.