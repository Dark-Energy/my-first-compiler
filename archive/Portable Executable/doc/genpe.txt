        Структура исполнимых файлов Windows
        Первым идет старый заголовок DOS с программой-заглушкой.
        Дальше идет заголовок собственно PE.
        Таблица секций
        Сами секции
        Заголовок PE начинается с сигнатуры PE#0#0.
        Важные поля этого заголовка :
        SizeOfCode 
        SizeOfInitData
        SizeOfUnInitData
        EntryPoint
        BaseOfCode
        BaseOfData
        FileAlign
        ObjectAlign
        ImageSize
        HeaderSize


File Align - выравнивание секций в файле. Может принимать значения
степени два в диапазоне от 512 до 64К включ. В байтовом значении указывает 
на границу,  на которую секции дополняются 0 при размещении в файле.

Object Align - выравнивание секций программы при размещении в памяти.
Должен быть степень 2 в диапазоне от 512 до 256М включ.

Image Base - виртуальный начальный адрес загрузки программ (ее первого
байта). Должен быть на границе 64Кб.
VA - это виртуальный адрес, базированный на смещение ImageBase. 
RVA - относительный адрес, ссылающийся на  Image Base
При генерации DLL устанавливается в $10000000, программы - в $400000;

Size Of Code   - 
        Размер именно программного кода в файле. KERNEL использует это 
значение  для фактического отведения памяти под загружаемую программу. 
Установка этого значения слишком маленьким приведет к выдаче идиотского 
сообщения о нехватке памяти, хотя ее может быть валом.
        Устанавливается равным размеру всего кода, выравненнго на 
ObjectAlign.

Size Of Data - 
        Размер секции инициализированных данных. Также выравнивается 
значением ObjectAlign

Base Of Code 
        RVA секции, содержащей программный код. 
        $1000 + (Size of Data + Size Of Import + Size Of Export), каждое
округляется до $1000 


Base Of Data 
        RVA секции, содержащей данные. $1000.

EntryPoint RVA
        адрес, относительно ImageBase, по которому передается управление,
при запуске программы или инициализации/завершении библиотеки.
Установлено в Base Of Code + смещение точки входа


Num RVA and Sizes
        Указывает размер массива RVA/Size, следующего ниже. Равно $10.
        Массив  состоит из пары значений DWORD, указывающие RVA и размер
различных таблиц - экспорта, импорта, ресурсов и пр. 
        VirtualAddres RVA
        VirtualSize - размер таблицы
        Первым идет экспорт, затем импорт, затем ресурсы, потом
данные по другим таблицам.
        Для импорта :
        VirtualAddres := BaseOfData + Size OfIniData
        VirtualSize := Size of Import Data
        Для экспорта 
        VirtualAddres := RVA таблицы импорта + размер таблицы импорта
                
Теперь идут таблицы секций.
        Описание Секция Данных
        Описание Секции Импорта
        Описание Секции Экспорта
        Описание секции Кода
        Описаниеи Секции Ресурсов
        Описание Секции Отладочной Информации
Число полей в таблице секций определяется полем Num ob Objects в заголовке.
Входы в таблице нумеруются, начиная с 1. Сама таблица размещается сразу за 
PE заголовком. Виртуальные адреса должны быть кратными Object Align.

        Имя секции - Если имя имеет в длину 8 байт, то можно не использовать
заключительный нуль-символ.
        Виртуальный размер секции - именно столько памяти, сколько 
отведено под секцию. Если VirtualSize > PhysicalSize, то остаток 
заполнятеся  нулями. Так определяются секции неинициализированных данных.
        Section RVA - размещение секции в памяти, виртуальный ее адрес,
относительно ImageBase. Позиция каждой секции выровнена на ObjectAlign.
        PhysicalSize - размер секции (ее инициализированной части) в файле,
кратно полю File Align. Должно быть меньше или равно VirtualSize.
        Physical Offset - физическое смещение относительно начала EXE файла,
выравнено на границу File Align.
        Flags - флаги. Определяют назначение секции и др.


        Секция импорта.
        Состоит из набора ImportDescriptor, завершается пустым дескриптором.
        Каждый дескриптор имеет два важных поля: 
        NameRVA - RVA строки-имени модуля (DLL). 
        Address Table RVA - RVA таблицы адресов
        RVA имени модуля вычисляется так: общий размер всех дескрипторов
(включая пустой) + длина имен всех ранее описанных модулей (включая 
завершающие нули) + RVA секции импорта
        Дескрипторы импорта идут в памяти подряд, за ними идут подряд 
строки-имена DLL. Затем идут таблицы адресов. Сначала идут подряд
адреса, массив имен функций.

                
 
        DOSHeader 
        PEHeader
        SectionTable
        ----Align
        ImportDirectory
        1
        #0
        Array of DLL Names
        Array of Func Names RVA
        Array of Func Names
        #0#0 func name #0
