defun int fact(int n);
var
  int i, res;
begin
  res:=1;
  for i:=0 to n-1 do res*=n-i; next;
  return res;
endfn;


defun int A(int k, int  n);
var
  int i, res;
begin
  res:=1;
  for i:=0 to k-1  do res*=n-i; next;
  return res;
endfn;


defun int C(int k, int n);
var
  int  i, res;
begin
  res:=n;
  i:=k;
  while k-- > 1 do  res*=n-k;  i*=k;  wend;
  res /=i;
   return res;
endfn;
    
//int t :=fact(5)-fact(4);
//MesBox(fact(8) div 6 );
//MesBox(6720 * 6);
//MesBox(C(3,8)*120);
// 8! div 3! = C(3,8) * 5!
//MesBox(fact(4)*C(3,7));

/* defun int Cmb(int k, int n); 
begin
  if k = 0 or k = n then return 1;
  else if k= 1 or k=n-1 then return n;
 else  return Cmb(k-1, n-1)+Cmb(k,n-1);
endif;
endfn; */

 defun int Cmb(int k, int n); 
var
  int r;
begin
  if k = 0 or k = n then return 1;
  else if k= 1 or k=n-1 then return n;
  endif;
  r:=0
  if k=2 then r := n-1 else r :=Cmb(k-1,n-1); endif;
  if  n-k = 2 then r+=n-1 else r+=Cmb(k,n-1); endif;
  return r;
endfn; 
 

//MesBox(Cmb(3,7));

/*

первый вызов с 1 из 4 сразу  возвращает 4
второй вызов - это 2 из 4
  он приводит еще к двум вызовам:
    1 из 3 и 2 из 3 
    первый возвращает 3, 
       второй приводит к двум вызовам
               1 из 2 и 2 из 2
                  первый возвращает 2 и 
                 второй возвращает 1
     возвращается 3
  возвращается 6
складывается 4 и 6
возвращается 10

 рекурсия в левой части С(k-1, n-1) отсекается условием   k= 1 
 что приводит к k-1 количеству вызовов
 рекурсия в правой части C(k, n-1) отсекается условием  k=n
 что приводит к n-k колву вызовов

*/
defun int fib(int n);
begin
  if n = 0 then return 0;
  else if n = 1 then return 1;
  else return fib(n-1)+ Fib(n+1);
  endif;
endfn;

MesBox(C(2,30) * 0.03**2 * 0.7 ** 28);
